*WARNING* no py37 lang (you can install 'python3.7')!
USAGE TEST: make.py <file|folder> ... <option>
USAGE STAT: make.py stats <file|folder> ... <option>
Tool to test and sort results from differents interpreters/languages
On the host:
PLATFORM : x86_64/Linux-6.2.0-1015-azure-x86_64-with-glibc2.35 with 4 cpus
CPUINFO  : AuthenticAMD "AMD EPYC 7763 64-Core Processor" (4890.85 bogomips)
MEMINFO  : 16365036 kB

Where <option> can be, to force a specific one:
 --mojo  : mojo 0.5.0 (6e50a738)
           /home/runner/.modular/pkg/packages.modular.com_mojo/bin/mojo run <file>
 --nim   : Nim Compiler Version 2.0.0 [Linux: amd64]
           /home/runner/.nimble/bin/nim r -d:danger <file>
 --java  : openjdk 11.0.21 2023-10-17
           /usr/bin/java <file>
 --node  : v18.18.2
           /usr/local/bin/node <file>
 --py3   : Python 3.10.12
           /usr/bin/python3 -uOO <file>
 --rust  : rustc 1.73.0 (cc66ad468 2023-10-03)
           /home/runner/.cargo/bin/rustc -C opt-level=3 -C target-cpu=native <file> -o exe && ./exe
 --gcc   : gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
           /usr/bin/gcc <file> -o exe && ./exe
 --pypy  : Python 3.9.18 (c5262994620471e725f57d652d78d842270649d6, Sep 27 2023, 13:43:44)
           /opt/hostedtoolcache/PyPy/3.9.18/x64/bin/pypy3 -uOO <file>
 --codon : 0.16.3
           /home/runner/.codon/bin/codon run -release <file>
*WARNING* no py37 lang (you can install 'python3.7')!

./sudoku.js : the simple algo, with strings (AI translation from java one) (100grids)
  - node  : 33.734 seconds (1x, 33.734><33.734)

./sudoku.c : the simple algo, with strings (AI translation from java one) (100grids)
  - gcc   : 2.839 seconds (1x, 2.839><2.839)

./sudoku.py : the simple algo, with strings (100grids)
  - codon : 15.898 seconds (1x, 15.898><15.898)
  - py3   : 26.868 seconds (1x, 26.868><26.868)
  - pypy  : 13.960 seconds (1x, 13.960><13.960)

./sudoku.nim : the simple algo, with strings (100grids)
  - nim   : 9.012 seconds (1x, 9.012><9.012)

./sudoku.rs : the simple algo, with strings (AI translation from java one) (100grids)
  - rust  : 44.358 seconds (1x, 44.358><44.358)

./sudoku_specialized.mojo : the simple algo, with specialized mojo-types (100grids)
  - mojo  : 0.744 seconds (1x, 0.744><0.744)

./sudoku_specialized.rs : the simple algo, with ultra-specialized types/api (100grids)
  - rust  : 0.604 seconds (1x, 0.604><0.604)

./sudoku.mojo : the simple algo, with strings (100grids)
  - mojo  : 15.898 seconds (1x, 15.898><15.898)

./sudoku.java : the simple algo, with strings (100grids)
  - java  : 20.225 seconds (1x, 20.225><20.225)

./sudoku_specialized_parallel.mojo : the simple algo, with specialized types & parallelization (100grids)
  - mojo  : 0.369 seconds (1x, 0.369><0.369)

optimized/sudoku.py : the optimized algo, with strings (1956grids)
  - codon : 73.805 seconds (1x, 73.805><73.805)
  - py3   : 159.523 seconds (1x, 159.523><159.523)
  - pypy  : 84.722 seconds (1x, 84.722><84.722)

optimized/sudoku_specialized.mojo : optimized algo, with specialized types (1956grids)
  - mojo  : 1.732 seconds (1x, 1.732><1.732)

optimized/sudoku_specialized.rs : the optimized algo, with ultra-specialized types/api (1956grids)
  - rust  : 2.574 seconds (1x, 2.574><2.574)

optimized/sudoku.mojo : the optimized algo, with strings (1956grids)
  - mojo  : 55.637 seconds (1x, 55.637><55.637)

optimized/sudoku.java : the optimized algo, with strings (1956grids)
  - java  : 100.157 seconds (1x, 100.157><100.157)

optimized/sudoku_specialized_parallel.mojo : optimized algo, with specialized types & parallelization (1956grids)
  - mojo  : 0.874 seconds (1x, 0.874><0.874)

(total time: 663.533 seconds)
